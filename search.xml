<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>相对路径解释</title>
      <link href="/2022/03/31/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E8%A7%A3%E9%87%8A/"/>
      <url>/2022/03/31/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E8%A7%A3%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<p> <strong>/ 这个斜杠代表的是根目录</strong></p><p><strong>./ 这个代表的是当前目录</strong></p><p><strong>../ 这个代表的意思是返回到上一级目录</strong></p>]]></content>
      
      
      <categories>
          
          <category> 遗漏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相对路径 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Github Action 实现全自动部署</title>
      <link href="/2022/03/25/%E4%BD%BF%E7%94%A8Github-Action%E5%AE%9E%E7%8E%B0%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/03/25/%E4%BD%BF%E7%94%A8Github-Action%E5%AE%9E%E7%8E%B0%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="Github-Action-简介"><a href="#Github-Action-简介" class="headerlink" title="Github Action 简介"></a>Github Action 简介</h2><p><a href="https://github.com/features/actions">Github Action</a> 是 GitHub 于 2018 年 10 月推出的一个 CI\CD 服务。</p><blockquote><p>​    CI\CD 其实说的是三件事情：「持续集成（<code>Continuous Integration</code>）」、「持续交付（<code>Continuous Delivery</code>）」、「持续部署（<code>Continuous Deployment</code>）」。<br>​    因为「持续交付」和「持续部署」的英文缩写是一样的，所以这三件事情缩写成了 <code>CI\CD</code> 。</p></blockquote><p>​    每次部署 <code>Hexo</code> 都需要运行指令三件套，随着文章越来越多，编译的时间也随之越来越长，通过 <code>Github Action</code>，我们只需要在每次完成博客的编写或修改以后，将改动直接 <code>push</code> 到远程仓库，之后的编译部署的工作统统交给 <code>CI</code> 来完成即可。</p><h2 id="教程常量声明"><a href="#教程常量声明" class="headerlink" title="教程常量声明"></a>教程常量声明</h2><table><thead><tr><th align="left">常量名</th><th align="center">常量释义</th></tr></thead><tbody><tr><td align="left"><strong>[Blogroot]</strong></td><td align="center">本地存放博客源码的文件夹路径</td></tr><tr><td align="left"><strong>[SourceRepo]</strong></td><td align="center">存放博客源码的私有仓库名</td></tr><tr><td align="left"><strong>[SiteBlogRepo]</strong></td><td align="center">存放编译好的博客页面的公有仓库名 Site 指站点</td></tr><tr><td align="left"><strong>[SiteUsername]</strong></td><td align="center">用户名 Site 指站点</td></tr><tr><td align="left"><strong>[SiteToken]</strong></td><td align="center">申请到的令牌码 Site 指站点</td></tr><tr><td align="left"><strong>[GithubEmail]</strong></td><td align="center">与 github 绑定的主邮箱，建议使用 Gmail</td></tr></tbody></table><h2 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h2><h3 id="获取-Token"><a href="#获取-Token" class="headerlink" title="获取 Token"></a>获取 Token</h3><p>​    为了确保交由 <code>Github Action</code> 来持续部署时，<code>Github Action</code> 具备足够的权限来进行 <code>hexo deploy</code> 操作，需要先获取 <code>Token</code>。</p><p>​    访问 <a href="https://github.com/settings/tokens">Github-&gt; 头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens</a>-&gt;generate new token, 创建的 <code>Token</code> 名称随意，但必须勾选 repo 项。</p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/PISlRDgrsBXzcLK.png"></p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/yF8cNUkmAJVBSuw.png"></p><p><img src="https://npm.elemecdn.com/akilar-candyassets/image/20200923085908748.png"></p><h3 id="创建存放源码的私有仓库"><a href="#创建存放源码的私有仓库" class="headerlink" title="创建存放源码的私有仓库"></a>创建存放源码的私有仓库</h3><h3 id="配置-deploy-项"><a href="#配置-deploy-项" class="headerlink" title="配置 deploy 项"></a>配置 deploy 项</h3><p>打开站点配置文件 <code>[Blogroot]/_config.yml</code>, 找到 <code>deploy</code> 配置项，使用之前生成的 <code>[SiteToken]</code> 和各个站点仓库 <code>URL</code> 来组装地址。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo:</span><br><span class="line">    gitHub: https://[GithubUsername]:[GithubToken]@github.com/[GithubUsername]/[GithubBlogRepo].git[branch]</span><br><span class="line">  # [branch]为可选项，表示部署的分支</span><br><span class="line">  #2020年10月后github新建仓库默认分支改为main，注意更改</span><br></pre></td></tr></table></figure><h3 id="配置-Github-Action"><a href="#配置-Github-Action" class="headerlink" title="配置 Github Action"></a>配置 Github Action</h3><p>在 <code>[Blogroot]</code> 新建<code>.github</code> 文件夹，注意开头是有个<code>.</code> 的。然后在<code>.github</code> 内新建 <code>workflows</code> 文件夹，再在 <code>workflows</code> 文件夹内新建 <code>autodeploy.yml</code>, 在<code>[Blogroot]/.github/workflows/autodeploy.yml</code> 里面输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 当有改动推送到master分支时，启动Action</span><br><span class="line">name: 自动部署</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - master #2020年10月后github新建仓库默认分支改为main，注意更改</span><br><span class="line"></span><br><span class="line">  release:</span><br><span class="line">    types:</span><br><span class="line">      - published</span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: 检查分支</span><br><span class="line">      uses: actions/checkout@v2</span><br><span class="line">      with:</span><br><span class="line">        ref: master #2020年10月后github新建仓库默认分支改为main，注意更改</span><br><span class="line"></span><br><span class="line">    - name: 安装 Node</span><br><span class="line">      uses: actions/setup-node@v1</span><br><span class="line">      with:</span><br><span class="line">        node-version: &quot;16.x&quot;</span><br><span class="line"></span><br><span class="line">    - name: 安装 Hexo</span><br><span class="line">      run: |</span><br><span class="line">        export TZ=&#x27;Asia/Shanghai&#x27;</span><br><span class="line">        npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">    - name: 缓存 Hexo</span><br><span class="line">      uses: actions/cache@v1</span><br><span class="line">      id: cache</span><br><span class="line">      with:</span><br><span class="line">        path: node_modules</span><br><span class="line">        key: $&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span><br><span class="line"></span><br><span class="line">    - name: 安装依赖</span><br><span class="line">      if: steps.cache.outputs.cache-hit != &#x27;true&#x27;</span><br><span class="line">      run: |</span><br><span class="line">        npm install --save</span><br><span class="line"></span><br><span class="line">    - name: 生成静态文件</span><br><span class="line">      run: |</span><br><span class="line">        hexo clean</span><br><span class="line">        hexo generate</span><br><span class="line"></span><br><span class="line">    - name: 部署</span><br><span class="line">      run: |</span><br><span class="line">        git config --global user.name &quot;[GithubUsername]&quot;</span><br><span class="line">        git config --global user.email &quot;[GithubEmail]&quot;</span><br><span class="line">        git clone https://github.com/[GithubUsername]/[GithubBlogRepo].git .deploy_git</span><br><span class="line">        # 此处务必用HTTPS链接。SSH链接可能有权限报错的隐患</span><br><span class="line">        # =====注意.deploy_git前面有个空格=====</span><br><span class="line">        # 这行指令的目的是clone博客静态文件仓库，防止Hexo推送时覆盖整个静态文件仓库，而是只推送有更改的文件</span><br><span class="line">        hexo deploy</span><br></pre></td></tr></table></figure><h3 id="重新设置远程仓库和分支"><a href="#重新设置远程仓库和分支" class="headerlink" title="重新设置远程仓库和分支"></a>重新设置远程仓库和分支</h3><ol><li><p>删除或者先把 <code>[Blogroot]/themes/butterfly/.git</code> 移动到非博客文件夹目录下，原因是主题文件夹下的<code>.git</code> 文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。</p></li><li><p>在博客根目录 <code>[Blogroot]</code> 路径下运行指令  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init #初始化</span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git #[SourceRepo]为存放源码的github私有仓库</span><br><span class="line">git checkout -b master # 切换到master分支，</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br><span class="line"># 如果不是，后面的所有设置的分支记得保持一致</span><br></pre></td></tr></table></figure></li><li><p>添加屏蔽项</p><p>因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到 github 上。这样可以显著减少需要提交的文件量和加快提交速度。<br>打开 <code>[Blogroot]/.gitignore</code>, 输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure></li><li><p>之后再运行 git 提交指令，将博客源码提交到 github 上。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;github action update&quot;</span><br><span class="line">git push origin master</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br></pre></td></tr></table></figure></li></ol><h3 id="处理bug"><a href="#处理bug" class="headerlink" title="处理bug"></a>处理bug</h3><ol><li><p>是否将 <code>node_modules</code> 也上传到源码仓库 <code>[SourceRepo]</code> 了。源码仓库不需要有 <code>node_modules</code> 文件夹。</p></li><li><p>是否有将<code>[Blogroot]/themes/</code> 下的主题文件夹上传，例如检查 [SourceRepo] 内的 <code>[Blogroot]/themes/Butterfly</code> 是否为空文件夹。为了能够正常编译页面，源码仓库需要有 <code>[Blogroot]/themes/Butterfly</code> 文件夹及它所包含的主题文件内容。<br>为了避免这两点，需要添加 git 屏蔽项。通过给<code>.gitignore</code> 添加屏蔽项解决。<br>打开 <code>[Blogroot]/.gitignore</code>, 输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line"></span><br><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure></li><li><p>若是遇到添加屏蔽项，但是还是无法正常上传主题文件夹的情况。请先将本地源码中的 <code>themes</code> 文件夹移动到别的目录下。然后 <code>commit</code> 一次。接着将 <code>themes</code> 文件夹移动回来，再 <code>commit</code> 一次。</p></li></ol><h3 id="本文参考"><a href="#本文参考" class="headerlink" title="本文参考"></a>本文参考</h3><p><a href="https://akilar.top/posts/f752c86d/">Akilarの糖果屋</a>:<a href="https://akilar.top/posts/f752c86d/">https://akilar.top/posts/f752c86d/</a> </p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔改美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主题微改</title>
      <link href="/2021/04/03/%E4%B8%BB%E9%A2%98%E5%BE%AE%E6%94%B9/"/>
      <url>/2021/04/03/%E4%B8%BB%E9%A2%98%E5%BE%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域</p><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><div class="tabs" id="page"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#page-1">示例源码</button></li><li class="tab"><button type="button" data-href="#page-2">配置参数</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="page-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top_img:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aside:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="page-2"><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><div class="tabs" id="page"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#page-1">示例源码</button></li><li class="tab"><button type="button" data-href="#page-2">配置参数</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="page-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img:</span><br><span class="line">comments:</span><br><span class="line">cover:</span><br><span class="line">toc:</span><br><span class="line">toc_number:</span><br><span class="line">toc_style_simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright_author:</span><br><span class="line">copyright_author_href:</span><br><span class="line">copyright_url:</span><br><span class="line">copyright_info:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">aside:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="page-2"><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标籤</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的<code>文章连结</code>链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的<code>版权声明</code>文字</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔改美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/09/01/hello-world/"/>
      <url>/2020/09/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
